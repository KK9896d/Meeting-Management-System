<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.calm.mapper.EmployeeMapper">

    <select id="getEmployeeByUsernameAndPassword" resultType="Employee">
        select * from employee where username=#{username} and password=#{password}
    </select>

    <insert id="addEmployee" parameterType="Employee">
        insert into employee(username, password, real_name, phone, email, status, dept_id, role) VALUE
            (#{username}, #{password}, #{realName}, #{phone}, #{email}, #{status}, #{deptId}, #{role})
    </insert>

    <select id="getEmployeeByUsername" parameterType="String" resultType="Employee">
        select * from employee where username=#{username}
    </select>

    <select id="getEmployeeByStatus" parameterType="String" resultType="Employee">
        select * from employee where status=#{status}
    </select>

    <update id="updateEmpStatus">
        update employee set status=#{status} where id=#{id};
    </update>

    <select id="getEmployeeBySpecification" resultType="Employee">
        select * from employee where status=#{emp.status}
        <if test="emp.realName!=null">
            and real_name like concat('%', #{emp.realName}, '%')
        </if>
        <if test="emp.username!=null">
            and username like concat('%', #{emp.username}, '%')
        </if>
        limit #{startIndex}, #{pageSize}

    </select>

    <select id="countEmpSizeBySpecification" parameterType="Employee" resultType="Integer">
        select count(*) from employee where status=#{status}
        <if test="realName!=null">
            and real_name like concat('%', #{realName}, '%')
        </if>
        <if test="username!=null">
            and username like concat('%', #{username}, '%')
        </if>
    </select>

    <select id="getEmpByDeptId" parameterType="int" resultType="Employee">
        select * from employee where dept_id=#{deptId} and status='0'
    </select>

    <update id="updateEmpPwdById">
        update employee set password=#{password} where id=#{id}
    </update>

    <select id="getEmployeeById" parameterType="int" resultType="Employee">
        select * from employee where id=#{empId}
    </select>

    <select id="getEmployeeByMeetingId" parameterType="int" resultType="Employee">
        select e.* from meeting_employee as me
        join employee as e on me.employee_id = e.id
        where me.meeting_id=#{meetingId}

    </select>

    <update id="updateEmpDeptIdByDeptId">
        update employee set dept_id=#{newDeptId} where dept_id=#{deptId}
    </update>


</mapper>
